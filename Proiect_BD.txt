CREATE SEQUENCE club_seq --SECVENTA CLUB SPORTIV 

INCREMENT BY 1 

START WITH 1  

MAXVALUE 100  

NOCYCLE; 

CREATE SEQUENCE jucatori_seq --SECVENTA JUCATORI 

INCREMENT BY 1 

START WITH 1  

MAXVALUE 100  

NOCYCLE; 

 

CREATE SEQUENCE tranzactie_seq --SECVENTA TRANZACTIE 

INCREMENT BY 1 

START WITH 1  

MAXVALUE 100  

NOCYCLE; 

 

CREATE SEQUENCE echipament_seq --SECVENTA ECHIPAMENT 

INCREMENT BY 1 

START WITH 1  

MAXVALUE 100  

NOCYCLE; 

 

CREATE SEQUENCE angajat_seq --SECVENTA ANGAJAT 

INCREMENT BY 1 

START WITH 1  

MAXVALUE 100  

NOCYCLE; 

 

CREATE SEQUENCE echipa_seq --SECVENTA ECHIPA 

INCREMENT BY 1 

START WITH 1  

MAXVALUE 100  

NOCYCLE; 

 

CREATE SEQUENCE meciuri_seq --SECVENTA MECIURI 

INCREMENT BY 1 

START WITH 1  

MAXVALUE 100  

NOCYCLE; 

 

CREATE SEQUENCE sponsori_seq --SECVENTA SPONSORI 

INCREMENT BY 1 

START WITH 1  

MAXVALUE 100  

NOCYCLE; 

 

CREATE SEQUENCE eveniment_seq --SECVENTA EVENIMENT 

INCREMENT BY 1 

START WITH 1  

MAXVALUE 100  

NOCYCLE; 

CREATE TABLE CLUB_SPORTIV -- CREAREA TABELULUI CLUB_SPORTIV 
( 
    id_club NUMBER(10) PRIMARY KEY, 

    nume_club VARCHAR2(100) NOT NULL, 

    locatie_club VARCHAR2(100) NOT NULL 
); 

CREATE TABLE ECHIPA -- CREAREA TABELULUI ECHIPA 
( 
    id_echipa NUMBER(10) PRIMARY KEY, 

    nume_echipa VARCHAR2(100) NOT NULL, 

    nume_club VARCHAR2(100) NOT NULL 
); 

CREATE TABLE JUCATORI --CREAREA TABELULUI JUCATORI 
(  
    id_jucator NUMBER(10) PRIMARY KEY, 

    id_club NUMBER(10) REFERENCES CLUB_SPORTIV(id_club),  

    id_echipa NUMBER(10) REFERENCES ECHIPA(id_echipa), nume_jucator VARCHAR2(100) NOT NULL,  

    prenume_jucator VARCHAR2(100) NOT NULL,  

    meciuri_castigate NUMBER(10) 
); 

CREATE TABLE TRANZACTIE -- CREAREA TABELULUI TRANZACTIE 
( 
    id_tranzactie NUMBER(10) PRIMARY KEY, 

    id_jucator NUMBER(10) REFERENCES JUCATORI(id_jucator), 

    data_tranzactie DATE DEFAULT SYSDATE, 

    valoare_tranzactie NUMBER(10) NOT NULL, 

    descriere_tranzactie VARCHAR2(200) 
); 

CREATE TABLE ECHIPAMENT -- CREAREA TABELULUI ECHIPAMENT 
( 
    id_echipament NUMBER(10) PRIMARY KEY, 

    id_jucator NUMBER(10) REFERENCES JUCATORI(id_jucator), 

    nume_echipament VARCHAR2(100) NOT NULL, 

    cantitate_echipament NUMBER(10) NOT NULL 
); 

CREATE TABLE ANGAJAT -- CREAREA TABELULUI ANGAJAT 
( 
    id_angajat NUMBER(10) PRIMARY KEY, 

    id_club NUMBER(10) REFERENCES CLUB_SPORTIV(id_club), 

    nume_angajat VARCHAR2(100) NOT NULL, 

    prenume_angajat VARCHAR2(100) NOT NULL, 

    salariu_angajat NUMBER(10) NOT NULL, 

    tel_angajat VARCHAR2(20) UNIQUE NOT NULL 

); 

CREATE TABLE ANTRENOR --CREAREA TABELULUI ANTRENOR 
(  
id_angajat NUMBER(10) PRIMARY KEY,  

nr_ani_experienta NUMBER(10) CHECK (nr_ani_experienta > 0) 

); 

CREATE TABLE MANAGER --CREAREA TABELULUI MANAGER 
(  
id_angajat NUMBER(10) PRIMARY KEY,  

nr_ani_experienta NUMBER(10) CHECK (nr_ani_experienta > 0) 
 );  

CREATE TABLE MECIURI -- CREAREA TABELULUI MECIURI 
( 
    id_meci NUMBER(10) PRIMARY KEY, 

    id_echipa1 NUMBER(10) REFERENCES ECHIPA(id_echipa), 

    id_echipa2 NUMBER(10) REFERENCES ECHIPA(id_echipa), 

    data_meci DATE DEFAULT SYSDATE NOT NULL, 

    locatie_meci VARCHAR2(100) NOT NULL 

); 

CREATE TABLE SPONSORI -- CREAREA TABELULUI SPONSORI
(
    id_sponsor NUMBER(10) PRIMARY KEY,
    nume_sponsor VARCHAR2(100) NOT NULL,
    suma_contract NUMBER(10) NOT NULL
);


CREATE TABLE EVENIMENT -- CREAREA TABELULUI EVENIMENT 
( 
    id_eveniment NUMBER(10) PRIMARY KEY, 

    id_sponsor NUMBER(10) REFERENCES SPONSORI(id_sponsor), 

    locatie_eveniment VARCHAR2(100) NOT NULL, 

    data_eveniment DATE DEFAULT SYSDATE NOT NULL 

); 

CREATE TABLE GESTIONARE --CREAREA TABELULUI gestionare 
(  
id_angajat NUMBER(10), 

 id_jucator NUMBER(10),  

PRIMARY KEY (id_angajat, id_jucator),  

FOREIGN KEY (id_angajat) REFERENCES ANGAJAT(id_angajat), FOREIGN KEY (id_jucator) REFERENCES JUCATORI(id_jucator)  

); 

 CREATE TABLE FINANTEAZA --CREAREA TABELULUI FINANTEAZA 
(  
id_meci NUMBER(10),  

id_sponsor NUMBER(10),  

PRIMARY KEY (id_meci, id_sponsor), 

 FOREIGN KEY (id_meci) REFERENCES MECIURI(id_meci),  

FOREIGN KEY (id_sponsor) REFERENCES SPONSORI(id_sponsor)  

);

-- Inserare in tabelul CLUB_SPORTIV
INSERT INTO CLUB_SPORTIV (id_club, nume_club, locatie_club) VALUES (club_seq.NEXTVAL, 'Club Sportiv Steaua', 'Bucure?ti');
INSERT INTO CLUB_SPORTIV (id_club, nume_club, locatie_club) VALUES (club_seq.NEXTVAL, 'Club Sportiv Dinamo', 'Bucure?ti');
INSERT INTO CLUB_SPORTIV (id_club, nume_club, locatie_club) VALUES (club_seq.NEXTVAL, 'Club Sportiv Rapid', 'Bucure?ti');
INSERT INTO CLUB_SPORTIV (id_club, nume_club, locatie_club) VALUES (club_seq.NEXTVAL, 'Club Sportiv Universitatea', 'Cluj-Napoca');
INSERT INTO CLUB_SPORTIV (id_club, nume_club, locatie_club) VALUES (club_seq.NEXTVAL, 'Club Sportiv Poli Ia?i', 'Ia?i');
INSERT INTO CLUB_SPORTIV (id_club, nume_club, locatie_club) VALUES (club_seq.NEXTVAL, 'Club Sportiv Craiova', 'Craiova');
INSERT INTO CLUB_SPORTIV (id_club, nume_club, locatie_club) VALUES (club_seq.NEXTVAL, 'Club Sportiv Timi?oara', 'Timi?oara');
INSERT INTO CLUB_SPORTIV (id_club, nume_club, locatie_club) VALUES (club_seq.NEXTVAL, 'Club Sportiv Arge?', 'Pite?ti');
INSERT INTO CLUB_SPORTIV (id_club, nume_club, locatie_club) VALUES (club_seq.NEXTVAL, 'Club Sportiv Farul', 'Constan?a');
INSERT INTO CLUB_SPORTIV (id_club, nume_club, locatie_club) VALUES (club_seq.NEXTVAL, 'Club Sportiv Boto?ani', 'Boto?ani');

-- Inserare in tabelul SPONSORI
INSERT INTO SPONSORI (id_sponsor, nume_sponsor, suma_contract) VALUES (sponsori_seq.NEXTVAL, 'Coca Cola', 10000);
INSERT INTO SPONSORI (id_sponsor, nume_sponsor, suma_contract) VALUES (sponsori_seq.NEXTVAL, 'Pepsi', 15000);
INSERT INTO SPONSORI (id_sponsor, nume_sponsor, suma_contract) VALUES (sponsori_seq.NEXTVAL, 'Red Bull', 20000);
INSERT INTO SPONSORI (id_sponsor, nume_sponsor, suma_contract) VALUES (sponsori_seq.NEXTVAL, 'Adidas', 25000);
INSERT INTO SPONSORI (id_sponsor, nume_sponsor, suma_contract) VALUES (sponsori_seq.NEXTVAL, 'Nike', 30000);
INSERT INTO SPONSORI (id_sponsor, nume_sponsor, suma_contract) VALUES (sponsori_seq.NEXTVAL, 'Puma', 18000);
INSERT INTO SPONSORI (id_sponsor, nume_sponsor, suma_contract) VALUES (sponsori_seq.NEXTVAL, 'Under Armour', 22000);
INSERT INTO SPONSORI (id_sponsor, nume_sponsor, suma_contract) VALUES (sponsori_seq.NEXTVAL, 'Reebok', 17000);
INSERT INTO SPONSORI (id_sponsor, nume_sponsor, suma_contract) VALUES (sponsori_seq.NEXTVAL, 'Gatorade', 16000);
INSERT INTO SPONSORI (id_sponsor, nume_sponsor, suma_contract) VALUES (sponsori_seq.NEXTVAL, 'Samsung', 21000);

-- Inserare in tabelul ECHIPA
INSERT INTO ECHIPA (id_echipa, nume_echipa, nume_club) VALUES (echipa_seq.NEXTVAL, 'Steaua Bucure?ti', 'Club Sportiv Steaua');
INSERT INTO ECHIPA (id_echipa, nume_echipa, nume_club) VALUES (echipa_seq.NEXTVAL, 'Dinamo Bucure?ti', 'Club Sportiv Dinamo');
INSERT INTO ECHIPA (id_echipa, nume_echipa, nume_club) VALUES (echipa_seq.NEXTVAL, 'Rapid Bucure?ti', 'Club Sportiv Rapid');
INSERT INTO ECHIPA (id_echipa, nume_echipa, nume_club) VALUES (echipa_seq.NEXTVAL, 'Universitatea Cluj', 'Club Sportiv Universitatea');
INSERT INTO ECHIPA (id_echipa, nume_echipa, nume_club) VALUES (echipa_seq.NEXTVAL, 'Poli Ia?i', 'Club Sportiv Poli Ia?i');
INSERT INTO ECHIPA (id_echipa, nume_echipa, nume_club) VALUES (echipa_seq.NEXTVAL, 'Craiova', 'Club Sportiv Craiova');
INSERT INTO ECHIPA (id_echipa, nume_echipa, nume_club) VALUES (echipa_seq.NEXTVAL, 'Timi?oara', 'Club Sportiv Timi?oara');
INSERT INTO ECHIPA (id_echipa, nume_echipa, nume_club) VALUES (echipa_seq.NEXTVAL, 'Arge?', 'Club Sportiv Arge?');
INSERT INTO ECHIPA (id_echipa, nume_echipa, nume_club) VALUES (echipa_seq.NEXTVAL, 'Farul Constan?a', 'Club Sportiv Farul');
INSERT INTO ECHIPA (id_echipa, nume_echipa, nume_club) VALUES (echipa_seq.NEXTVAL, 'Boto?ani', 'Club Sportiv Boto?ani');

-- Inserare in tabelul ANGAJAT
INSERT INTO ANGAJAT (id_angajat, id_club, nume_angajat, prenume_angajat, salariu_angajat, tel_angajat) VALUES (angajat_seq.NEXTVAL, 1, 'Popescu', 'Maria', 5000, '0700111222');
INSERT INTO ANGAJAT (id_angajat, id_club, nume_angajat, prenume_angajat, salariu_angajat, tel_angajat) VALUES (angajat_seq.NEXTVAL, 2, 'Ionescu', 'Ana', 4500, '0700333444');
INSERT INTO ANGAJAT (id_angajat, id_club, nume_angajat, prenume_angajat, salariu_angajat, tel_angajat) VALUES (angajat_seq.NEXTVAL, 3, 'Georgescu', 'Elena', 4800, '0700555666');
INSERT INTO ANGAJAT (id_angajat, id_club, nume_angajat, prenume_angajat, salariu_angajat, tel_angajat) VALUES (angajat_seq.NEXTVAL, 4, 'Marinescu', 'Ioana', 5100, '0700777888');
INSERT INTO ANGAJAT (id_angajat, id_club, nume_angajat, prenume_angajat, salariu_angajat, tel_angajat) VALUES (angajat_seq.NEXTVAL, 5, 'Dumitrescu', 'Cristina', 5200, '0700999000');
INSERT INTO ANGAJAT (id_angajat, id_club, nume_angajat, prenume_angajat, salariu_angajat, tel_angajat) VALUES (angajat_seq.NEXTVAL, 6, 'Stan', 'Adriana', 4900, '0700111333');
INSERT INTO ANGAJAT (id_angajat, id_club, nume_angajat, prenume_angajat, salariu_angajat, tel_angajat) VALUES (angajat_seq.NEXTVAL, 7, 'Radu', 'Andreea', 5300, '0700222444');
INSERT INTO ANGAJAT (id_angajat, id_club, nume_angajat, prenume_angajat, salariu_angajat, tel_angajat) VALUES (angajat_seq.NEXTVAL, 8, 'Petrescu', 'Sofia', 4600, '0700555777');
INSERT INTO ANGAJAT (id_angajat, id_club, nume_angajat, prenume_angajat, salariu_angajat, tel_angajat) VALUES (angajat_seq.NEXTVAL, 9, 'Ciobanu', 'Gabriela', 4700, '0700888999');
INSERT INTO ANGAJAT (id_angajat, id_club, nume_angajat, prenume_angajat, salariu_angajat, tel_angajat) VALUES (angajat_seq.NEXTVAL, 10, 'Nicolae', 'Teodora', 4800, '0700111444');

-- Inserare in tabelul JUCATORI
INSERT INTO JUCATORI (id_jucator, id_club, id_echipa, nume_jucator, prenume_jucator, meciuri_castigate) VALUES (jucatori_seq.NEXTVAL, 1, 1, 'Popescu', 'Ion', 5);
INSERT INTO JUCATORI (id_jucator, id_club, id_echipa, nume_jucator, prenume_jucator, meciuri_castigate) VALUES (jucatori_seq.NEXTVAL, 1, 2, 'Ionescu', 'Andrei', 10);
INSERT INTO JUCATORI (id_jucator, id_club, id_echipa, nume_jucator, prenume_jucator, meciuri_castigate) VALUES (jucatori_seq.NEXTVAL, 2, 3, 'Georgescu', 'Mihai', 7);
INSERT INTO JUCATORI (id_jucator, id_club, id_echipa, nume_jucator, prenume_jucator, meciuri_castigate) VALUES (jucatori_seq.NEXTVAL, 2, 4, 'Marinescu', 'Cristian', 8);
INSERT INTO JUCATORI (id_jucator, id_club, id_echipa, nume_jucator, prenume_jucator, meciuri_castigate) VALUES (jucatori_seq.NEXTVAL, 3, 5, 'Dumitrescu', 'Alexandru', 4);
INSERT INTO JUCATORI (id_jucator, id_club, id_echipa, nume_jucator, prenume_jucator, meciuri_castigate) VALUES (jucatori_seq.NEXTVAL, 3, 6, 'Stan', 'Vasile', 6);
INSERT INTO JUCATORI (id_jucator, id_club, id_echipa, nume_jucator, prenume_jucator, meciuri_castigate) VALUES (jucatori_seq.NEXTVAL, 4, 7, 'Radu', 'Adrian', 3);
INSERT INTO JUCATORI (id_jucator, id_club, id_echipa, nume_jucator, prenume_jucator, meciuri_castigate) VALUES (jucatori_seq.NEXTVAL, 4, 8, 'Petrescu', 'Florin', 9);
INSERT INTO JUCATORI (id_jucator, id_club, id_echipa, nume_jucator, prenume_jucator, meciuri_castigate) VALUES (jucatori_seq.NEXTVAL, 5, 9, 'Ciobanu', 'George', 12);
INSERT INTO JUCATORI (id_jucator, id_club, id_echipa, nume_jucator, prenume_jucator, meciuri_castigate) VALUES (jucatori_seq.NEXTVAL, 5, 10, 'Nicolae', 'R?zvan', 2);


-- Inserare in tabelul ANTRENOR
INSERT INTO ANTRENOR (id_angajat, nr_ani_experienta) VALUES (1, 10);
INSERT INTO ANTRENOR (id_angajat, nr_ani_experienta) VALUES (2, 12);
INSERT INTO ANTRENOR (id_angajat, nr_ani_experienta) VALUES (3, 8);
INSERT INTO ANTRENOR (id_angajat, nr_ani_experienta) VALUES (4, 15);
INSERT INTO ANTRENOR (id_angajat, nr_ani_experienta) VALUES (5, 20);

-- Inserare in tabelul MANAGER
INSERT INTO MANAGER (id_angajat, nr_ani_experienta) VALUES (6, 5);
INSERT INTO MANAGER (id_angajat, nr_ani_experienta) VALUES (7, 7);
INSERT INTO MANAGER (id_angajat, nr_ani_experienta) VALUES (8, 6);
INSERT INTO MANAGER (id_angajat, nr_ani_experienta) VALUES (9, 9);
INSERT INTO MANAGER (id_angajat, nr_ani_experienta) VALUES (10, 11);

-- Inserare in tabelul GESTIONARE
INSERT INTO GESTIONARE (id_angajat, id_jucator) VALUES (1, 1);
INSERT INTO GESTIONARE (id_angajat, id_jucator) VALUES (2, 2);
INSERT INTO GESTIONARE (id_angajat, id_jucator) VALUES (3, 3);
INSERT INTO GESTIONARE (id_angajat, id_jucator) VALUES (4, 4);
INSERT INTO GESTIONARE (id_angajat, id_jucator) VALUES (5, 5);
INSERT INTO GESTIONARE (id_angajat, id_jucator) VALUES (6, 6);
INSERT INTO GESTIONARE (id_angajat, id_jucator) VALUES (7, 7);
INSERT INTO GESTIONARE (id_angajat, id_jucator) VALUES (8, 8);
INSERT INTO GESTIONARE (id_angajat, id_jucator) VALUES (9, 9);
INSERT INTO GESTIONARE (id_angajat, id_jucator) VALUES (10, 10);

-- Inserare in tabelul TRANZACTIE
INSERT INTO TRANZACTIE (id_tranzactie, id_jucator, data_tranzactie, valoare_tranzactie, descriere_tranzactie) VALUES (tranzactie_seq.NEXTVAL, 1, SYSDATE, 1000, 'Transfer la alt club');
INSERT INTO TRANZACTIE (id_tranzactie, id_jucator, data_tranzactie, valoare_tranzactie, descriere_tranzactie) VALUES (tranzactie_seq.NEXTVAL, 2, SYSDATE, 1500, 'Prelungire contract');
INSERT INTO TRANZACTIE (id_tranzactie, id_jucator, data_tranzactie, valoare_tranzactie, descriere_tranzactie) VALUES (tranzactie_seq.NEXTVAL, 3, SYSDATE, 2000, 'Bonus performan??');
INSERT INTO TRANZACTIE (id_tranzactie, id_jucator, data_tranzactie, valoare_tranzactie, descriere_tranzactie) VALUES (tranzactie_seq.NEXTVAL, 4, SYSDATE, 1200, 'Compensa?ie');
INSERT INTO TRANZACTIE (id_tranzactie, id_jucator, data_tranzactie, valoare_tranzactie, descriere_tranzactie) VALUES (tranzactie_seq.NEXTVAL, 5, SYSDATE, 1100, 'Acord de sponsorizare');
INSERT INTO TRANZACTIE (id_tranzactie, id_jucator, data_tranzactie, valoare_tranzactie, descriere_tranzactie) VALUES (tranzactie_seq.NEXTVAL, 6, SYSDATE, 1700, 'Transfer temporar');
INSERT INTO TRANZACTIE (id_tranzactie, id_jucator, data_tranzactie, valoare_tranzactie, descriere_tranzactie) VALUES (tranzactie_seq.NEXTVAL, 7, SYSDATE, 1400, 'Bonus pentru goluri');
INSERT INTO TRANZACTIE (id_tranzactie, id_jucator, data_tranzactie, valoare_tranzactie, descriere_tranzactie) VALUES (tranzactie_seq.NEXTVAL, 8, SYSDATE, 1300, 'Premiu de loialitate');
INSERT INTO TRANZACTIE (id_tranzactie, id_jucator, data_tranzactie, valoare_tranzactie, descriere_tranzactie) VALUES (tranzactie_seq.NEXTVAL, 9, SYSDATE, 1600, 'Clauz? de reziliere');
INSERT INTO TRANZACTIE (id_tranzactie, id_jucator, data_tranzactie, valoare_tranzactie, descriere_tranzactie) VALUES (tranzactie_seq.NEXTVAL, 10, SYSDATE, 1800, 'Incentiv pentru meciuri');

-- Inserare in tabelul ECHIPAMENT
INSERT INTO ECHIPAMENT (id_echipament, id_jucator, nume_echipament, cantitate_echipament) VALUES (echipament_seq.NEXTVAL, 1, 'minge de fotbal', 5);
INSERT INTO ECHIPAMENT (id_echipament, id_jucator, nume_echipament, cantitate_echipament) VALUES (echipament_seq.NEXTVAL, 2, 'tricou', 10);
INSERT INTO ECHIPAMENT (id_echipament, id_jucator, nume_echipament, cantitate_echipament) VALUES (echipament_seq.NEXTVAL, 3, 'pantaloni scur?i', 7);
INSERT INTO ECHIPAMENT (id_echipament, id_jucator, nume_echipament, cantitate_echipament) VALUES (echipament_seq.NEXTVAL, 4, 'adida?i', 8);
INSERT INTO ECHIPAMENT (id_echipament, id_jucator, nume_echipament, cantitate_echipament) VALUES (echipament_seq.NEXTVAL, 5, 'genunchiere', 4);
INSERT INTO ECHIPAMENT (id_echipament, id_jucator, nume_echipament, cantitate_echipament) VALUES (echipament_seq.NEXTVAL, 6, 'casc?', 6);
INSERT INTO ECHIPAMENT (id_echipament, id_jucator, nume_echipament, cantitate_echipament) VALUES (echipament_seq.NEXTVAL, 7, 'm?nu?i de portar', 3);
INSERT INTO ECHIPAMENT (id_echipament, id_jucator, nume_echipament, cantitate_echipament) VALUES (echipament_seq.NEXTVAL, 8, 'jambiere', 9);
INSERT INTO ECHIPAMENT (id_echipament, id_jucator, nume_echipament, cantitate_echipament) VALUES (echipament_seq.NEXTVAL, 9, 'tricou de antrenament', 12);
INSERT INTO ECHIPAMENT (id_echipament, id_jucator, nume_echipament, cantitate_echipament) VALUES (echipament_seq.NEXTVAL, 10, 'ghiozdan sportiv', 2);

-- Inserare in tabelul EVENIMENT
INSERT INTO EVENIMENT (id_eveniment, id_sponsor, locatie_eveniment, data_eveniment) VALUES (eveniment_seq.NEXTVAL, 1, 'Stadionul Na?ional', SYSDATE);
INSERT INTO EVENIMENT (id_eveniment, id_sponsor, locatie_eveniment, data_eveniment) VALUES (eveniment_seq.NEXTVAL, 2, 'Sala Polivalent?', SYSDATE + 10);
INSERT INTO EVENIMENT (id_eveniment, id_sponsor, locatie_eveniment, data_eveniment) VALUES (eveniment_seq.NEXTVAL, 3, 'Arena Na?ional?', SYSDATE + 20);
INSERT INTO EVENIMENT (id_eveniment, id_sponsor, locatie_eveniment, data_eveniment) VALUES (eveniment_seq.NEXTVAL, 4, 'Cluj Arena', SYSDATE + 30);
INSERT INTO EVENIMENT (id_eveniment, id_sponsor, locatie_eveniment, data_eveniment) VALUES (eveniment_seq.NEXTVAL, 5, 'Stadionul Ion Oblemenco', SYSDATE + 40);
INSERT INTO EVENIMENT (id_eveniment, id_sponsor, locatie_eveniment, data_eveniment) VALUES (eveniment_seq.NEXTVAL, 6, 'Stadionul Dan P?ltini?anu', SYSDATE + 50);
INSERT INTO EVENIMENT (id_eveniment, id_sponsor, locatie_eveniment, data_eveniment) VALUES (eveniment_seq.NEXTVAL, 7, 'Stadionul Municipal', SYSDATE + 60);
INSERT INTO EVENIMENT (id_eveniment, id_sponsor, locatie_eveniment, data_eveniment) VALUES (eveniment_seq.NEXTVAL, 8, 'Stadionul Farul', SYSDATE + 70);
INSERT INTO EVENIMENT (id_eveniment, id_sponsor, locatie_eveniment, data_eveniment) VALUES (eveniment_seq.NEXTVAL, 9, 'Stadionul Emil Alexandrescu', SYSDATE + 80);
INSERT INTO EVENIMENT (id_eveniment, id_sponsor, locatie_eveniment, data_eveniment) VALUES (eveniment_seq.NEXTVAL, 10, 'Stadionul Municipal Boto?ani', SYSDATE + 90);

-- Inserare in tabelul MECIURI
INSERT INTO MECIURI (id_meci, id_echipa1, id_echipa2, data_meci, locatie_meci) VALUES (meciuri_seq.NEXTVAL, 1, 2, SYSDATE, 'Stadionul Na?ional');
INSERT INTO MECIURI (id_meci, id_echipa1, id_echipa2, data_meci, locatie_meci) VALUES (meciuri_seq.NEXTVAL, 3, 4, SYSDATE + 7, 'Sala Polivalent?');
INSERT INTO MECIURI (id_meci, id_echipa1, id_echipa2, data_meci, locatie_meci) VALUES (meciuri_seq.NEXTVAL, 5, 6, SYSDATE + 14, 'Arena Na?ional?');
INSERT INTO MECIURI (id_meci, id_echipa1, id_echipa2, data_meci, locatie_meci) VALUES (meciuri_seq.NEXTVAL, 7, 8, SYSDATE + 21, 'Cluj Arena');
INSERT INTO MECIURI (id_meci, id_echipa1, id_echipa2, data_meci, locatie_meci) VALUES (meciuri_seq.NEXTVAL, 9, 10, SYSDATE + 28, 'Stadionul Ion Oblemenco');
INSERT INTO MECIURI (id_meci, id_echipa1, id_echipa2, data_meci, locatie_meci) VALUES (meciuri_seq.NEXTVAL, 1, 3, SYSDATE + 35, 'Stadionul Dan P?ltini?anu');
INSERT INTO MECIURI (id_meci, id_echipa1, id_echipa2, data_meci, locatie_meci) VALUES (meciuri_seq.NEXTVAL, 2, 4, SYSDATE + 42, 'Stadionul Municipal');
INSERT INTO MECIURI (id_meci, id_echipa1, id_echipa2, data_meci, locatie_meci) VALUES (meciuri_seq.NEXTVAL, 5, 7, SYSDATE + 49, 'Stadionul Farul');
INSERT INTO MECIURI (id_meci, id_echipa1, id_echipa2, data_meci, locatie_meci) VALUES (meciuri_seq.NEXTVAL, 6, 8, SYSDATE + 56, 'Stadionul Emil Alexandrescu');
INSERT INTO MECIURI (id_meci, id_echipa1, id_echipa2, data_meci, locatie_meci) VALUES (meciuri_seq.NEXTVAL, 9, 1, SYSDATE + 63, 'Stadionul Municipal Boto?ani');

-- Inserare in tabelul FINANTEAZA
INSERT INTO FINANTEAZA (id_meci, id_sponsor) VALUES (1, 1);
INSERT INTO FINANTEAZA (id_meci, id_sponsor) VALUES (2, 2);
INSERT INTO FINANTEAZA (id_meci, id_sponsor) VALUES (3, 3);
INSERT INTO FINANTEAZA (id_meci, id_sponsor) VALUES (4, 4);
INSERT INTO FINANTEAZA (id_meci, id_sponsor) VALUES (5, 5);
INSERT INTO FINANTEAZA (id_meci, id_sponsor) VALUES (6, 6);
INSERT INTO FINANTEAZA (id_meci, id_sponsor) VALUES (7, 7);
INSERT INTO FINANTEAZA (id_meci, id_sponsor) VALUES (8, 8);
INSERT INTO FINANTEAZA (id_meci, id_sponsor) VALUES (9, 9);
INSERT INTO FINANTEAZA (id_meci, id_sponsor) VALUES (10, 10);

--Exercitiul 1: Subcereri sincronizate în care intervin cel pu?in 3 tabele 

--Cerere: Afi?a?i numele cluburilor, numele juc?torilor ?i sumele tranzac?iilor
--pentru fiecare juc?tor din cluburi. 

SELECT  
    cs.nume_club, 
    j.nume_jucator, 
    j.prenume_jucator, 
    t.valoare_tranzactie 
FROM  
    CLUB_SPORTIV cs 
JOIN  
    JUCATORI j ON cs.id_club = j.id_club --jucatori din  fiecare club
JOIN  
    TRANZACTIE t ON j.id_jucator = t.id_jucator --legam fiecare jucator de tranzactiile sale
ORDER BY  
    cs.nume_club, j.nume_jucator;--ordonam dupa numele clubului si dupa numele jucatorului

--Exercitiul 2: Subcereri nesincronizate în clauza FROM 

--Cerere: Afi?a?i toate echipamentele ?i cantit??ile acestora
--utilizate de juc?torii care au câ?tigat mai mult de 5 de meciuri. 

SELECT   
    e.nume_echipament,  
    e.cantitate_echipament  
FROM   
    ECHIPAMENT e  
WHERE   
    e.id_jucator IN (  
        SELECT   
            j.id_jucator  
        FROM   
            JUCATORI j  
        WHERE   
            j.meciuri_castigate > 5  --alegem jucatorii cu meciuri_castigate>5
    ); 
    
--Exercitiul 3: Grup?ri de date, func?ii grup, filtrare la nivel de grupuri cu subcereri nesincronizate (în clauza de HAVING) în care intervin cel pu?in 3 tabele (în cadrul aceleia?i cereri) 

--Cerere: Afi?a?i numele cluburilor ?i num?rul total de juc?tori
--pentru cluburile care au o valoare total? a tranzac?iilor mai mare de 1000. 

SELECT   
    cs.nume_club,  
    COUNT(j.id_jucator) AS numar_jucatori  
FROM   
    CLUB_SPORTIV cs  
JOIN   
    JUCATORI j ON cs.id_club = j.id_club  --toti jucatorii din acelasi club
JOIN   
    TRANZACTIE t ON j.id_jucator = t.id_jucator  --legam jucatorul de tranzactiile sale
GROUP BY   
    cs.nume_club  --grupam dupa nume
HAVING   
    (SELECT SUM(t2.valoare_tranzactie)   --calculam suma valorilor tranzactiilor
     FROM TRANZACTIE t2   
     JOIN JUCATORI j2 ON t2.id_jucator = j2.id_jucator   --toti jucatorii care se potrivesc
     JOIN CLUB_SPORTIV cs2 ON j2.id_club = cs2.id_club   --toate cluburile care se potrivesc
     WHERE cs2.nume_club = cs.nume_club) > 1000; --filtram tranzactiile din clubul curent
     
--Exercitiul 4: Ordon?ri ?i utilizarea func?iilor NVL ?i DECODE (în cadrul aceleia?i cereri) 

--Cerere: Afi?a?i numele juc?torilor ?i cluburile lor, ordonat dup? numele juc?torilor. 
--Dac? num?rul de meciuri câ?tigate este NULL, afi?a?i-l ca 0. 
--Utiliza?i DECODE pentru a ar?ta dac? juc?torul a câ?tigat mai mult de 10 de meciuri. 

SELECT   
    j.nume_jucator,  
    j.prenume_jucator,  
    cs.nume_club,  
    NVL(j.meciuri_castigate, 0) AS meciuri_castigate, --inclocuim valorile NULL cu 0 si numim rezultatul meciuri_castigate
    DECODE(  
        SIGN(NVL(j.meciuri_castigate, 0) - 10),  --calculeaza semnul rezultatului obtinut 
        1, 'Peste 10',   
        'Sub 10'  
    ) AS status_meciuri  
FROM   
    JUCATORI j  
JOIN   
    CLUB_SPORTIV cs ON j.id_club = cs.id_club  --asociem jucatorul cu clubul
ORDER BY   
    j.nume_jucator; --ordonam dupa nume

--Exercitiul 5: Utilizarea a cel pu?in 2 func?ii pe ?iruri de caractere, 2 func?ii pe date calendaristice, a cel pu?in unei expresii CASE ?i utilizarea a cel pu?in 1 bloc de cerere (clauza WITH) 

--Cerere: Afi?a?i numele ?i prenumele angaja?ilor, num?rul de ani de experien?? 
--(pentru antrenori ?i manageri), salariul lor lunar (calculat) ?i un mesaj specific 
--dac? sunt antrenori sau manageri, folosind un bloc de cerere (clauza WITH).

WITH AngajatiFunctii AS ( 
    SELECT  
        a.id_angajat, 
        a.nume_angajat, 
        a.prenume_angajat, 
        a.salariu_angajat / 12 AS salariu_lunar, 
        CASE  
            WHEN EXISTS (SELECT 1 FROM ANTRENOR an WHERE an.id_angajat = a.id_angajat) THEN  --verificam daca exista un rand in tabelul antrenor unde id_angajat=a.id_angajat
                (SELECT an.nr_ani_experienta FROM ANTRENOR an WHERE an.id_angajat = a.id_angajat) --selectam numarul de ani de experienta
            WHEN EXISTS (SELECT 1 FROM MANAGER m WHERE m.id_angajat = a.id_angajat) THEN  --verificam daca exista un rand in tabelul manager in care id_angajat=a.id_angajat
                (SELECT m.nr_ani_experienta FROM MANAGER m WHERE m.id_angajat = a.id_angajat) --selectam numarul de ani de experienta
            ELSE 0 
        END AS ani_experienta, --denumim rezultatul ani_experienta
        CASE  
            WHEN EXISTS (SELECT 1 FROM ANTRENOR an WHERE an.id_angajat = a.id_angajat) THEN 'Antrenor' --verificam daca exista un rand in tabelul antrenor unde id_angajat=a.id_angajat daca da returnam ANTRENOR
            WHEN EXISTS (SELECT 1 FROM MANAGER m WHERE m.id_angajat = a.id_angajat) THEN 'Manager' --verificam daca exista un rand in tabelul manager in care id_angajat=a.id_angajat daca da returnam MANAGER
            ELSE 'Angajat' --altfel este doar un anagajat
        END AS functie --denumim rezultatul funtie
    FROM  
        ANGAJAT a 
) 
SELECT  
    id_angajat, 
    nume_angajat AS nume_angajat, 
    prenume_angajat AS prenume_angajat, 
    salariu_lunar, 
    ani_experienta, 
    functie 
FROM  
    AngajatiFunctii --selectam datele din tabelul creat mai devreme
ORDER BY  
    nume_angajat, prenume_angajat;

--Exercitiul 1 Actualizare:  

--Cerere: Actualizeaz? salariul angaja?ilor care sunt antrenori ?i
--au mai mult de 10 ani de experien??, m?rind salariul cu 500: 

UPDATE ANGAJAT 
SET salariu_angajat = salariu_angajat + 500 
WHERE id_angajat IN ( 
    SELECT id_angajat 
    FROM ANTRENOR 
    WHERE nr_ani_experienta > 10 
); 
SELECT * FROM ANGAJAT
ROLLBACK;

--Exercitiul 2 Actualizare:  

-- Cerere: Actualizeaz? num?rul de meciuri câ?tigate pentru juc?torii care
--fac parte din clubul cu numele "Club Sportiv Steaua", m?rind num?rul de meciuri
--câ?tigate cu 2: 

UPDATE JUCATORI 
SET meciuri_castigate = NVL(meciuri_castigate, 0) + 2 
WHERE id_club IN ( 
    SELECT id_club 
    FROM CLUB_SPORTIV 
    WHERE nume_club = 'Club Sportiv Steaua' 
);  
SELECT * FROM JUCATORI
ROLLBACK;

--Exercitiul 3 Actualizare:  

-- Cerere: Actualizeaz? valoarea tranzac?iilor pentru juc?torii care
--au câ?tigat mai mult de 50 de meciuri, crescând valoarea tranzac?iei cu 10%: 

UPDATE TRANZACTIE 
SET valoare_tranzactie = valoare_tranzactie * 1.1 
WHERE id_jucator IN ( 
    SELECT id_jucator 
    FROM JUCATORI 
    WHERE meciuri_castigate > 50 
); 
SELECT * FROM TRANZACTIE
ROLLBACK;

--Exercitiul 1 Suprimare:  

--Cerere: ?terge echipamentele asociate juc?torilor care 
--nu mai fac parte din niciun club (valoare NULL pentru id_club): 

DELETE FROM ECHIPAMENT 
WHERE id_jucator IN ( 
    SELECT id_jucator 
    FROM JUCATORI 
    WHERE id_club IS NULL 
); 
SELECT * FROM ECHIPAMENT
ROLLBACK;

--Exercitiul 2 Suprimare: 

--Cerere: ?terge tranzac?iile juc?torilor care nu au câ?tigat niciun meci (
--meciuri_castigate este 0 sau NULL): 

DELETE FROM TRANZACTIE 
WHERE id_jucator IN ( 
    SELECT id_jucator 
    FROM JUCATORI 
    WHERE NVL(meciuri_castigate, 0) = 0 
);
SELECT * FROM TRANZACTIE
ROLLBACK;

--Exercitiul 3 Suprimare: 

-- Cerere: ?terge angaja?ii care sunt asocia?i cu cluburi care nu mai exist? 
--(id_club nu exist? în tabelul CLUB_SPORTIV): 

DELETE FROM ANGAJAT 
WHERE id_club NOT IN ( 
    SELECT id_club 
    FROM CLUB_SPORTIV 
); 
SELECT * FROM ANGAJAT
ROLLBACK;

--LMD PERMIS
CREATE VIEW VIZUALIZARE_COMPLEXA AS
SELECT 
    j.id_jucator,
    j.nume_jucator,
    j.prenume_jucator,
    cs.nume_club,
    NVL(j.meciuri_castigate, 0) AS meciuri_castigate,
    NVL(SUM(t.valoare_tranzactie), 0) AS valoare_totala_tranzactii
FROM 
    JUCATORI j
JOIN 
    CLUB_SPORTIV cs ON j.id_club = cs.id_club
LEFT JOIN 
    TRANZACTIE t ON j.id_jucator = t.id_jucator
GROUP BY 
    j.id_jucator, j.nume_jucator, j.prenume_jucator, cs.nume_club, j.meciuri_castigate;

--LMD NEPERMIS 

DELETE FROM VIZUALIZARE_COMPLEXA --operatia de stergere nu este permisa
WHERE id_jucator = 1; 

--Exercitiul 1: Outer join pe minim 4 tabele 

-- Cerere: Afi?a?i toate cluburile sportive, împreun? cu juc?torii,
--tranzac?iile ?i echipamentele acestora, incluzând cluburile care nu au juc?tori,
--juc?torii care nu au tranzac?ii ?i juc?torii care nu au echipamente. 

SELECT  
    cs.nume_club, 
    j.nume_jucator, 
    j.prenume_jucator, 
    NVL(t.valoare_tranzactie, 0) AS valoare_tranzactie, 
    e.nume_echipament 
FROM  
    CLUB_SPORTIV cs 
LEFT JOIN  --folosing left join pentru a include toate cluburile sportive chiar si cele care nu au jucatori
    JUCATORI j ON cs.id_club = j.id_club 
LEFT JOIN  --daca exista jucatori fara tranzacrii aceasta valoare va fi null
    TRANZACTIE t ON j.id_jucator = t.id_jucator 
LEFT JOIN  --daca exista jucatori fara echipament aceasta valoare va fi null
    ECHIPAMENT e ON j.id_jucator = e.id_jucator 
ORDER BY  
    cs.nume_club, j.nume_jucator; 
    
--Exercitiul 2: Cerere ce utilizeaza operatia division 

-- Cerere: G?si?i numele ?i prenumele juc?torilor care au folosit toate echipamentele disponibile. 

SELECT j.nume_jucator, j.prenume_jucator 
FROM JUCATORI j 
WHERE NOT EXISTS ( --daca nu exista niciun echipament lipsa pentru jucator atunci acesta a folosit toate echipamentele disponibile
    SELECT e.nume_echipament 
    FROM ECHIPAMENT e --verificam daca pentru fiecare echipament din ECHIPAMENT exista cel putin un rand in tabelul ECHIPAMENT pentru jcuatorul curent
    WHERE NOT EXISTS ( 
        SELECT 1 
        FROM ECHIPAMENT e2 
        WHERE e2.id_jucator = j.id_jucator 
          AND e2.nume_echipament = e.nume_echipament 
    ) 
); 

--Exercitiul 3: Cerere care implementeaza analiza top-n 

-- Cerere: Afi?a?i primii 5 juc?tori cu cele mai mari valori ale tranzac?iilor. 

SELECT * 
FROM ( 
    SELECT  
        j.nume_jucator, 
        j.prenume_jucator, 
        SUM(t.valoare_tranzactie) AS total_valoare_tranzactie --calculam suma tranzactiilor fiecarui jucator
    FROM  
        JUCATORI j 
    JOIN  
        TRANZACTIE t ON j.id_jucator = t.id_jucator 
    GROUP BY  
        j.nume_jucator, j.prenume_jucator 
    ORDER BY  
        total_valoare_tranzactie DESC --ordonam descrescator
)  
WHERE ROWNUM <= 5; --limitam rezultatele la primii 5 jucatori

COMMIT

-- EXERCITIUL 1
--Pentru fiecare concurent afisati numele, prenumele si media diferentei dintre punctajul maxim posibil si  
--punctajul obtinut la probele la care a participat în anii 2021 si 2022
SELECT c.nume AS nume_concurent, c.prenume, 
       ROUND(NVL(AVG(p.punctaj_maxim - cp.punctaj), 0), 2) AS medie 
FROM CONCURENT c 
JOIN CONCURENT_PROBA cp ON c.id_concurent = cp.id_concurent 
JOIN PROBA p ON cp.id_proba = p.id_proba 
WHERE EXTRACT(YEAR FROM p.data_proba) IN (2021, 2022) 
GROUP BY c.nume, c.prenume;

-- EXERCITIUL 2
--Pentru competitiile la care au participat mai putin de 3 candidati (0, 1 sau 2 candidati), sa 
--se afiseze suma punctajelor tuturor probelor
SELECT c.denumire, SUM(cp.punctaj) AS suma
FROM COMPETITIE c 
JOIN PROBA p ON c.id_competitie = p.id_competitie 
JOIN CONCURENT_PROBA cp ON p.id_proba = cp.id_proba 
GROUP BY c.denumire 
HAVING COUNT(DISTINCT cp.id_concurent) < 3;

-- EXERCITIUL 3
--Pentru fiecare concurent sa se afiseze num?rul competitiilor la care a participat în anii 2021, 2022 si 2023
--Rezultatul va contine 4 coloane: nume_concurent, nr_com_21, nr_com_22, nr_com_23.
SELECT c.nume AS nume_concurent,
    SUM(CASE WHEN EXTRACT(YEAR FROM co.data_competitie) = 2021 THEN 1 ELSE 0 END) AS nr_com_21,
    SUM(CASE WHEN EXTRACT(YEAR FROM co.data_competitie) = 2022 THEN 1 ELSE 0 END) AS nr_com_22,
    SUM(CASE WHEN EXTRACT(YEAR FROM co.data_competitie) = 2023 THEN 1 ELSE 0 END) AS nr_com_23
FROM CONCURENT c
JOIN CONCURENT_PROBA cp ON c.id_concurent = cp.id_concurent
JOIN PROBA p ON cp.id_proba = p.id_proba
JOIN COMPETITIE co ON p.id_competitie = co.id_competitie
GROUP BY c.nume;

-- EXERCITIUL 4
--Pentru competitiile care contin in denumire ‘fmi’ sa se afiseze denumirea, num?rul 
-- de zile pe durata carora s au desfasurat probe
SELECT co.denumire, COUNT(DISTINCT TRUNC(p.data_proba)) AS nr_zile 
FROM COMPETITIE co 
JOIN PROBA p ON co.id_competitie = p.id_competitie 
WHERE LOWER(co.denumire) LIKE '%fmi%' 
GROUP BY co.denumire;

--EXERCITIUL 5
--Pentru fiecare competitie sa se afiseze castig?torii (primii 3 concurenti 
-- in ordinea sumelor punctajelor  obtinute la toate probele)
SELECT competitie, castigator, total_punctaj 
FROM 
(
    SELECT co.denumire AS competitie, c.nume AS castigator,
        SUM(cp.punctaj) AS total_punctaj,
        ROW_NUMBER() OVER (PARTITION BY co.id_competitie ORDER BY SUM(cp.punctaj) DESC) AS a 
    FROM COMPETITIE co
    JOIN PROBA p ON co.id_competitie = p.id_competitie
    JOIN CONCURENT_PROBA cp ON p.id_proba = cp.id_proba
    JOIN CONCURENT c ON cp.id_concurent = c.id_concurent
    GROUP BY co.denumire, c.nume, co.id_competitie
)
WHERE a <= 3
ORDER BY competitie, a;

--EXERCITIUL 6
--Sa se afiseze concurentii care au participat la toate probele 
--date în cadrul competitiei ‘fmi no stress 8’
SELECT cn.nume, cn.prenume 
FROM CONCURENT cn 
JOIN CONCURENT_PROBA cp ON cn.id_concurent = cp.id_concurent 
JOIN PROBA p ON cp.id_proba = p.id_proba 
JOIN COMPETITIE co ON p.id_competitie = co.id_competitie 
WHERE co.denumire = 'fmi no stress 8' 
GROUP BY cn.id_concurent, cn.nume, cn.prenume 
HAVING COUNT(DISTINCT p.id_proba) = 
(
    SELECT COUNT(*) 
    FROM PROBA p2 
    JOIN COMPETITIE c2 ON p2.id_competitie = c2.id_competitie 
    WHERE c2.denumire = 'fmi no stress 8'
);

--EXERCITIUL 7
--Sa se afiseze concurentii care au o medie a punctajelor 
--obtinute peste media tuturor punctajelor
SELECT c.nume, ROUND(AVG(cp.punctaj), 2) AS punctaje 
FROM CONCURENT c 
JOIN CONCURENT_PROBA cp ON c.id_concurent = cp.id_concurent 
GROUP BY c.id_concurent, c.nume 
HAVING AVG(cp.punctaj) > 
(
    SELECT AVG(punctaj) 
    FROM CONCURENT_PROBA
);

--EXERCITIUL 8
--Sa se afiseze pentru fiecare proba concurentii 
--care au obtinut punctaj maxim
SELECT p.descriere, c.nume, cp.punctaj 
FROM CONCURENT c 
JOIN CONCURENT_PROBA cp ON c.id_concurent = cp.id_concurent 
JOIN PROBA p ON cp.id_proba = p.id_proba 
WHERE cp.punctaj = 
(
    SELECT MAX(cp2.punctaj) 
    FROM CONCURENT_PROBA cp2 
    WHERE cp2.id_proba = p.id_proba
);

--EXERCITIUL 9
--Pentru probele la care cel mai mare punctaj a  fost obtinut de mai multi concurenti sa se afiseze  
--denumirea si denumirea competitiei în cadrul carora au fost organizate
SELECT p.descriere AS denumire_proba, co.denumire AS den_competitie
FROM CONCURENT_PROBA cp
JOIN PROBA p ON cp.id_proba = p.id_proba
JOIN COMPETITIE co ON p.id_competitie = co.id_competitie
WHERE cp.punctaj = (
    SELECT MAX(cp_inner.punctaj)
    FROM CONCURENT_PROBA cp_inner
    WHERE cp_inner.id_proba = cp.id_proba
)
AND (SELECT COUNT(*)
     FROM CONCURENT_PROBA cp_inner
     WHERE cp_inner.id_proba = cp.id_proba
     AND cp_inner.punctaj = cp.punctaj) >= 1
ORDER BY co.denumire, p.descriere;

DROP TABLE FINANTEAZA;
DROP TABLE GESTIONARE;
DROP TABLE EVENIMENT;
DROP TABLE SPONSORI;
DROP TABLE MECIURI;
DROP TABLE MANAGER;
DROP TABLE ANTRENOR;
DROP TABLE ANGAJAT;
DROP TABLE ECHIPAMENT;
DROP TABLE TRANZACTIE;
DROP TABLE JUCATORI;
DROP TABLE ECHIPA;
DROP TABLE CLUB_SPORTIV;
DROP SEQUENCE club_seq;
DROP SEQUENCE jucatori_seq;
DROP SEQUENCE tranzactie_seq;
DROP SEQUENCE echipament_seq;
DROP SEQUENCE angajat_seq;
DROP SEQUENCE echipa_seq;
DROP SEQUENCE meciuri_seq;
DROP SEQUENCE sponsori_seq;
DROP SEQUENCE eveniment_seq;
